{"version":3,"sources":["components/Note.js","services/notes.js","components/Notification.js","App.js","index.js"],"names":["Note","note","toggleImportance","label","important","className","content","onClick","baseURL","axios","get","then","response","data","newObject","post","id","put","Notification","message","App","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","useEffect","noteServices","initialNotes","notesToShow","filter","Footer","style","color","fontStyle","fontSize","map","find","changedNote","returnedNote","catch","error","setTimeout","n","toggleImportanceOf","onSubmit","event","preventDefault","noteObject","date","Date","toISOString","Math","random","concat","value","onChange","target","type","ReactDOM","render","document","getElementById"],"mappings":"sLAeeA,EAbF,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,iBAEdC,EAAQF,EAAKG,UAAY,qBAAuB,iBAEtD,OACE,qBAAIC,UAAU,OAAd,UACGJ,EAAKK,QACN,wBAAQC,QAASL,EAAjB,SAAoCC,Q,gBCPpCK,EAAU,yDAiBD,EAfA,WAEX,OADgBC,IAAMC,IAAIF,GACXG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAa9B,EAVA,SAACC,GAEZ,OADgBL,IAAMM,KAAKP,EAASM,GACrBH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAQ9B,EALA,SAACG,EAAIF,GAEhB,OADiBL,IAAMQ,IAAN,UAAaT,EAAb,YAAwBQ,GAAMF,GAChCH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SCA9BK,EAdM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAEpB,OAAgB,OAAZA,EACO,KAIP,qBAAKd,UAAU,QAAf,SACKc,KCiGEC,EAtGH,WAAO,IAAD,EAEYC,mBAAS,IAFrB,mBAEPC,EAFO,KAEAC,EAFA,OAGgBF,mBAAS,iBAHzB,mBAGPG,EAHO,KAGEC,EAHF,OAIgBJ,oBAAS,GAJzB,mBAIPK,EAJO,KAIEC,EAJF,OAK0BN,mBAAS,0BALnC,mBAKPO,EALO,KAKOC,EALP,KAOdC,qBAAU,WACNC,IAEKpB,MAAK,SAAAqB,GACFT,EAASS,QAElB,IAEH,IAyBMC,EAAcP,EAAUJ,EAAQA,EAAMY,QAAO,SAAAjC,GAAI,OAAuB,IAAnBA,EAAKG,aAoB1D+B,EAAS,WAOX,OACI,sBAAKC,MAPW,CAChBC,MAAO,QACPC,UAAW,SACXC,SAAU,IAIV,UACI,uBACA,2GAKZ,OAEI,gCACI,uCACA,cAAC,EAAD,CAAcpB,QAASS,IACvB,8BACI,yBAAQrB,QAAS,kBAAMoB,GAAYD,IAAnC,kBAAoDA,EAAU,YAAa,WAE/E,6BACKO,EAAYO,KAAI,SAAAvC,GAAI,OACjB,cAAC,EAAD,CAEIA,KAAMA,EACNC,iBAAkB,kBA9CX,SAACc,GAExB,IAAMf,EAAOqB,EAAMmB,MAAK,SAAAxC,GAAI,OAAIA,EAAKe,KAAOA,KACtC0B,EAAW,2BAAQzC,GAAR,IAAcG,WAAYH,EAAKG,YAEhD2B,EACYf,EAAI0B,GACX/B,MAAK,SAAAgC,GACFpB,EAASD,EAAMkB,KAAI,SAAAvC,GAAI,OAAIA,EAAKe,KAAOA,EAAKf,EAAO0C,SAEtDC,OAAM,SAAAC,GACHhB,EAAgB,QAAD,OAAS5B,EAAKK,QAAd,qCACfwC,YAAW,WAAQjB,EAAgB,QAAS,KAC5CN,EAASD,EAAMY,QAAO,SAAAa,GAAC,OAAIA,EAAE/B,KAAOA,SAiCJgC,CAAmB/C,EAAKe,MAF3Cf,EAAKe,SAKtB,uBAAMiC,SA5EE,SAACC,GAEbA,EAAMC,iBAEN,IAAMC,EAAa,CACf9C,QAASkB,EACT6B,MAAM,IAAIC,MAAOC,cACjBnD,UAAWoD,KAAKC,SAAW,IAG/B1B,EACYqB,GACPzC,MAAK,SAAAgC,GACFpB,EAASD,EAAMoC,OAAOf,IACtBlB,EAAW,QA8Df,UACI,uBAAOkC,MAAOnC,EAASoC,SA1DV,SAACV,GAEtBzB,EAAWyB,EAAMW,OAAOF,UAyDhB,wBAAQG,KAAK,SAAb,qBAEJ,cAAC3B,EAAD,Q,MC/FZ4B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.242e13ec.chunk.js","sourcesContent":["import React from 'react';\n\nconst Note = ({ note, toggleImportance }) => {\n\n  const label = note.important ? 'make not important' : 'make important';\n\n  return (\n    <li className='note'>\n      {note.content}\n      <button onClick={toggleImportance}>{label}</button>\n    </li>\n  )\n  \n}\n\nexport default Note","import axios from 'axios';\n\nconst baseURL = 'https://learning3fullstackopen.herokuapp.com/api/notes';\n\nconst getAll = () => {\n    const request = axios.get(baseURL);\n    return request.then(response => response.data);\n}\n\nconst create = (newObject) => {\n    const request = axios.post(baseURL, newObject);\n    return request.then(response => response.data);\n}\n\nconst update = (id, newObject) => {\n    const request =  axios.put(`${baseURL}/${id}`, newObject);\n    return request.then(response => response.data);\n}\n\nexport default { getAll, create, update };","import React from 'react';\n\nconst Notification = ({ message }) => {\n\n    if (message === null) {\n        return null\n    }\n\n    return (\n        <div className=\"error\">\n            {message}\n        </div>\n    )\n\n}\n\nexport default Notification;","import React, { useState, useEffect } from 'react';\nimport Note from './components/Note';\nimport noteServices from './services/notes'\nimport Notification from './components/Notification';\n\nconst App = () => {\n\n    const [notes, setNotes] = useState([]);\n    const [newNote, setNewNote] = useState('a new note...');\n    const [showAll, setShowAll] = useState(true);\n    const [errorMessage, setErrorMessage] = useState('some error happened...')\n\n    useEffect(() => {\n        noteServices\n            .getAll()\n            .then(initialNotes => {\n                setNotes(initialNotes);\n            });\n    }, []);\n\n    const addNote = (event) => {\n\n        event.preventDefault();\n        \n        const noteObject = {\n            content: newNote,\n            date: new Date().toISOString(),\n            important: Math.random() > 0.5,\n        }\n\n        noteServices\n            .create(noteObject)\n            .then(returnedNote => {\n                setNotes(notes.concat(returnedNote));\n                setNewNote('');\n            });\n\n    }\n\n    const handleNoteChange = (event) => {\n\n        setNewNote(event.target.value);\n\n    }\n\n    const notesToShow = showAll ? notes : notes.filter(note => note.important === true);\n\n    const toggleImportanceOf = (id) => {\n\n        const note = notes.find(note => note.id === id);\n        const changedNote = { ...note, important: !note.important }\n\n        noteServices\n            .update(id, changedNote)\n            .then(returnedNote => {\n                setNotes(notes.map(note => note.id !== id ? note : returnedNote ))\n            })\n            .catch(error => {\n                setErrorMessage(`Note ${note.content} was already removed from server`);\n                setTimeout(() => { setErrorMessage(null) }, 5000);\n                setNotes(notes.filter(n => n.id !== id));\n            });\n\n    }\n\n    const Footer = () => {\n        const footerStyle = {\n            color: 'green',\n            fontStyle: 'italic',\n            fontSize: 16,\n        }\n\n        return (\n            <div style={footerStyle}>\n                <br />\n                <em>Note app, Department of Computer Science, University of Helsinki 2021</em>\n            </div>\n        );\n    }\n\n    return (\n\n        <div>\n            <h1>Notes</h1>\n            <Notification message={errorMessage} />\n            <div>\n                <button onClick={() => setShowAll(!showAll)} >show {showAll ? 'important': 'all'}</button>\n            </div>\n            <ul>\n                {notesToShow.map(note => \n                    <Note\n                        key={note.id}\n                        note={note}\n                        toggleImportance={() => toggleImportanceOf(note.id)}\n                    />)}\n            </ul>\n            <form onSubmit={addNote}>\n                <input value={newNote} onChange={handleNoteChange}/>\n                <button type=\"submit\">save</button>\n            </form>\n            <Footer />\n        </div>\n\n    );\n  \n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);"],"sourceRoot":""}